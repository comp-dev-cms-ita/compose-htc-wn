version: '3.7'
services:
  wn:
    depends_on:
    - cvmfs
    image: ghcr.io/comp-dev-cms-ita/htcondor-dask-wn:v1.1.2
    restart: always
    privileged: true
    network_mode: "host"
    volumes:
    - type: bind
      source: ./shared-secret
      target: /etc/pwd
    #- type: bind
    #  source: ./wn-spool
    #  target: /var/lib/condor/execute
    #- type: bind
    #  source: ./client.plugins.d
    #  target: /etc/xrootd/client.plugins.d
    - type: bind
      source: ./logs
      target: /var/log/condor
    - type: bind
      source: ./cvmfs
      target: /cvmfs
    - type: bind
      source: ./config.d
      target: /etc/condor/config.d
    - type: bind
      source: /sys/fs/cgroup
      target: /sys/fs/cgroup
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "ls -altrh /cvmfs/cms.dodas.infn.it/new_repository"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    env_file:
    - .env 
  cvmfs:
    image: dodasts/cvmfs:v1.4-reloaded
    restart: always
    #entrypoint: ["sleep", "infinity"]
    environment:
    - REPO_LIST=cms.cern.ch  grid.cern.ch cms.dodas.infn.it images.dodas.infn.it unpacked.cern.ch 
    privileged: true
    network_mode: "host"
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "ls -altrh /cvmfs/*/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
    - type: bind
      bind:
        propagation: rshared
      source: ./cvmfs
      target: /cvmfs
    - type: bind
      source: ./default-local
      target: /etc/cvmfs/config.d
    - type: bind
      source: ./cms-dodas-key
      target: /etc/cvmfs/keys/cms.dodas.infn.it
    - type: bind
      source: ./images-dodas-key
      target: /etc/cvmfs/keys/images.dodas.infn.it

  # docker run --user telegraf:$(stat -c '%g' /var/run/docker.sock) -v /var/run/docker.sock:/var/run/docker.sock -v $PWD/telegraf-config/telegraf.conf:/etc/telegraf/telegraf.conf:ro telegraf  
  # GID=$(stat -c '%g' /var/run/docker.sock)  docker-compose up telegraf
  telegraf:
    image: telegraf
    restart: always
    network_mode: "host"
    volumes:
    - type: bind
      source: ./telegraf-config/telegraf.conf
      target: /etc/telegraf/telegraf.conf
    - type: bind
      source: /var/run/docker.sock
      target: /var/run/docker.sock
    - type: bind
      source: /proc
      target:  /host/proc
    #- type: bind
    #  source: ./wn-spool
    #  target: /var/lib/condor/execute
    user: "telegraf:${GID}"
    env_file:
      - .env

  autoheal:
    restart: always
    environment:
    - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    image: willfarrell/autoheal
